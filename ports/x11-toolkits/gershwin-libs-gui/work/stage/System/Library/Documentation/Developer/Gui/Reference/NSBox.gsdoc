<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSBox" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSBox</title>
    <author name="Scott Christley">
      <email address="scottc@net-community.com">
        scottc@net-community.com
      </email>
    </author>
    <date>Generated at 2025-09-16 12:12:19 -0500</date>
    <abstract>
      Simple box view that can display a border and title
    </abstract>
    <copy>1996-2024 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSBox class
      </heading>
      <class name="NSBox" super="NSView" ovadd="1.0.0">
        <declared>AppKit/NSBox.h</declared>
        <conform>NSCoding</conform>
        <desc>
          Class: NSBox Description: NSBox is a container view
          capable of drawing a border and title around its
          content. It is often used to group related interface
          elements visually and semantically. Instance
          Variables: _cell - The underlying cell used for
          drawing. _content_view - The view contained inside
          the box. _offsets - Margins between the border and the
          content. _border_rect - Rectangle defining the area
          of the border. _title_rect - Rectangle defining the area
          of the title. _border_type - Type of border drawn (line,
          bezel, etc). _title_position - Position of the title
          relative to the border. _box_type - General
          appearance of the box. _fill_color - Fill color
          (only if NSBoxCustom). _border_color - Border color
          (only if NSBoxCustom). _border_width - Width of the
          border (only if NSBoxCustom). _corner_radius - Corner
          radius for rounded borders (only if NSBoxCustom).
          _transparent - Determines whether the box is
          drawn transparently. <br />
          <p>
            TODO : Description
          </p>
        </desc>
        <ivariable type="NSColor*" name="_border_color" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSRect" name="_border_rect" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSBorderType" name="_border_type" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="CGFloat" name="_border_width" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSBoxType" name="_box_type" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="id" name="_cell" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="id" name="_content_view" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="CGFloat" name="_corner_radius" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSColor*" name="_fill_color" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSSize" name="_offsets" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSTitlePosition" name="_title_position" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSRect" name="_title_rect" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="_transparent" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="NSColor*" ovadd="10.5.0">
          <sel>borderColor</sel>
          <desc>
            Returns the border color when using NSBoxCustom.
          </desc>
        </method>
        <method type="NSRect" ovadd="1.0.0">
          <sel>borderRect</sel>
          <desc>
            Returns the rectangle used to draw the box's
            border. <br />
            <p>
              Returns the border rectangle of the box.
            </p>
          </desc>
        </method>
        <method type="NSBorderType" ovadd="1.0.0">
          <sel>borderType</sel>
          <desc>
            Returns the border type of the box. <br />
            <p>
              Returns the NSBox's border type. See
              <ref type="type" id="NSBorderType">
                NSBorderType
              </ref>
              for more information. The default border type is
              <ref type="type" id="NSBorderType">
                NSGrooveBorder
              </ref>
              .
            </p>
            <p>
              See Also:
              <ref type="method" id="-setBorderType:">
                -setBorderType:
              </ref>
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="10.5.0">
          <sel>borderWidth</sel>
          <desc>
            Returns the width of the border when using
            NSBoxCustom.
          </desc>
        </method>
        <method type="NSBoxType" ovadd="10.0.0">
          <sel>boxType</sel>
          <desc>
            Returns the type of box used.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>contentView</sel>
          <desc>
            Returns the view contained within the box. <br />
            <p>
              Returns the NSBox's content view. The content
              view is created as NSView when the box is
              initialized. The contentView is resizes when
              needed.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setContentView:">
                -setContentView:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSSize" ovadd="1.0.0">
          <sel>contentViewMargins</sel>
          <desc>
            Returns the margins applied to the content view.
            <br />
            <p>
              Returns an NSSize containing the interior margins
              of the receiver. An NSBox's content view margins are
              empty space that is subtracted from the top,
              bottom, and sides as padding between the inside
              of the box and the frame of its content view.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setContentViewMargins:">
                -setContentViewMargins:
              </ref>
            </p>
          </desc>
        </method>
        <method type="CGFloat" ovadd="10.5.0">
          <sel>cornerRadius</sel>
          <desc>
            Returns the corner radius when using NSBoxCustom.
          </desc>
        </method>
        <method type="NSColor*" ovadd="10.5.0">
          <sel>fillColor</sel>
          <desc>
            Returns the fill color when using NSBoxCustom.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.5.0">
          <sel>isTransparent</sel>
          <desc>
            Returns whether the box is transparent.
          </desc>
        </method>
        <method type="NSSize" ovadd="0.0.0" ovrem="0.0.0">
          <sel>minimumSize</sel>
          <desc>
            Returns the minimum size of the box.
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>setBorderColor:</sel>
          <arg type="NSColor*">newBorderColor</arg>
          <desc>
            Sets the border color when using NSBoxCustom.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBorderType:</sel>
          <arg type="NSBorderType">aType</arg>
          <desc>
            Sets the border type of the box. <br />
            <p>
              Sets the border type to <var>aType</var>, resizes
              the content view frame if needed, and marks self for
              display. See
              <ref type="type" id="NSBorderType">
                NSBorderType
              </ref>
              for more informations The default boder type is
              <ref type="type" id="NSBorderType">
                NSGrooveBorder
              </ref>
              .
            </p>
            <p>
              See Also:
              <ref type="method" id="-borderType">
                -borderType
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>setBorderWidth:</sel>
          <arg type="CGFloat">borderWidth</arg>
          <desc>
            Sets the width of the border when using NSBoxCustom.
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setBoxType:</sel>
          <arg type="NSBoxType">aType</arg>
          <desc>
            Sets the box's display type.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setContentView:</sel>
          <arg type="NSView*">aView</arg>
          <desc>
            Sets the content view of the box. <br />
            <p>
              Sets the content view to <var>aView</var>. The
              current content view is replaced by
              <ref type="method" id="-replaceSubview:with:">
                -replaceSubview:with:
              </ref>
              . So you should
              <ref type="method" id="-retain">
                -retain
              </ref>
              the current view if you want to use it later. The
              contentView frame is resized if needed.
            </p>
            <p>
              See Also:
              <ref type="method" id="-contentView">
                -contentView
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setContentViewMargins:</sel>
          <arg type="NSSize">offsetSize</arg>
          <desc>
            Sets the margins around the content view. <br />
            <p>
              Sets the NSSize containing the interior margins to
              <var>offsetSize</var>. An NSBox's content view
              margins are empty space that is subtracted from
              the top, bottom, and sides as padding between the
              inside of the box and the frame of its content
              view
            </p>
            <p>
              See Also:
              <ref type="method" id="-contentViewMargins">
                -contentViewMargins
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>setCornerRadius:</sel>
          <arg type="CGFloat">cornerRadius</arg>
          <desc>
            Sets the corner radius when using NSBoxCustom.
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>setFillColor:</sel>
          <arg type="NSColor*">newFillColor</arg>
          <desc>
            Sets the fill color when using NSBoxCustom.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setFrameFromContentFrame:</sel>
          <arg type="NSRect">contentFrame</arg>
          <desc>
            Adjusts the box frame to fit a given content frame.
            <br />
            <p>
              Resizes the NSBox to fit the content view frame
              <var>contentFrame</var>.
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitle:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            Sets the title string displayed by the box. <br />
            <p>
              Sets the title cell to <var>aString</var>, resizes
              the content view frame if needed and marks self for
              display.
            </p>
            <p>
              Warning: This method does not implement the
              Cocoa behaviour
            </p>
            <p>
              See Also: <ref type="method" id="-title">-title</ref>
              <ref type="method" id="-setStringValue:" class="NSCell">
                [NSCell -setStringValue:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitleFont:</sel>
          <arg type="NSFont*">fontObj</arg>
          <desc>
            Sets the font used to display the title. <br />
            <p>
              Sets the title cell font to <var>fontObj</var>,
              resizes the content view frame if needed and
              marks self for display.
            </p>
            <p>
              See Also:
              <ref type="method" id="-titleFont">
                -titleFont
              </ref>
              <ref type="method" id="-setFont:" class="NSCell">
                [NSCell -setFont:]
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setTitlePosition:</sel>
          <arg type="NSTitlePosition">aPosition</arg>
          <desc>
            Sets the title position relative to the box. <br />
            <p>
              Sets the title cell position to <var>aPosition</var>
              , resizes the content view frame if needed and marks
              self for display. See
              <ref type="type" id="NSTitlePosition">
                NSTitlePosition
              </ref>
              for more information. The default position is
              <ref type="type" id="NSTitlePosition">
                NSAtTop
              </ref>
              .
            </p>
            <p>
              See Also:
              <ref type="method" id="-titlePosition">
                -titlePosition
              </ref>
            </p>
          </desc>
        </method>
        <method type="void" ovadd="10.0.0">
          <sel>setTitleWithMnemonic:</sel>
          <arg type="NSString*">aString</arg>
          <desc>
            Sets the title string and enables keyboard shortcut
            via mnemonic.
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>setTransparent:</sel>
          <arg type="BOOL">transparent</arg>
          <desc>
            Sets whether the box should be <var>transparent</var>.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>sizeToFit</sel>
          <desc>
            Resizes the box to tightly fit its content. <br />
            <p>
              Resizes the NSBox and its content view to fit its
              subviews.
            </p>
          </desc>
        </method>
        <method type="NSString*" ovadd="1.0.0">
          <sel>title</sel>
          <desc>
            Returns the current title string. <br />
            <p>
              Returns title cell string value.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitle:">
                -setTitle:
              </ref>
              <ref type="method" id="-stringValue" class="NSCell">
                [NSCell -stringValue]
              </ref>
            </p>
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>titleCell</sel>
          <desc>
            Returns the cell used to draw the title. <br />
            <p>
              Returns the title cell
            </p>
          </desc>
        </method>
        <method type="NSFont*" ovadd="1.0.0">
          <sel>titleFont</sel>
          <desc>
            Returns the font used for the title. <br />
            <p>
              Returns the title cell font.
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitleFont:">
                -setTitleFont:
              </ref>
              <ref type="method" id="-font" class="NSCell">
                [NSCell -font]
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSTitlePosition" ovadd="1.0.0">
          <sel>titlePosition</sel>
          <desc>
            Returns the title's position relative to the box.
            <br />
            <p>
              Returns the title position. See
              <ref type="type" id="NSTitlePosition">
                NSTitlePosition
              </ref>
              for more information. The default position is
              <ref type="type" id="NSTitlePosition">
                NSAtTop
              </ref>
            </p>
            <p>
              See Also:
              <ref type="method" id="-setTitlePosition:">
                -setTitlePosition:
              </ref>
            </p>
          </desc>
        </method>
        <method type="NSRect" ovadd="1.0.0">
          <sel>titleRect</sel>
          <desc>
            Returns the rectangle used to draw the title.
            <br />
            <p>
              Returns the title rectangle
            </p>
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
