<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSArrayController" stylesheeturl="default-styles.css" up="Gui">
  <head>
    <title>NSArrayController</title>
    <author name="Fred Kiefer">
      <email address="fredkiefer@gmx.de">
        fredkiefer@gmx.de
      </email>
    </author>
    <date>Generated at 2025-09-16 12:12:19 -0500</date>
    <abstract>Controller class for arrays</abstract>
    <copy>(C) 2006, 2020 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSArrayController class
      </heading>
      <class name="NSArrayController" super="NSObjectController" ovadd="10.3.0">
        <declared>AppKit/NSArrayController.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="NSArray*" name="_arranged_objects" validity="protected" ovadd="10.3.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSPredicate*" name="_filter_predicate" validity="protected" ovadd="10.3.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSIndexSet*" name="_selection_indexes" validity="protected" ovadd="10.3.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSArray*" name="_sort_descriptors" validity="protected" ovadd="10.3.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="struct GSArrayControllerFlagsType" name="struct GSArrayControllerFlagsType" validity="protected" ovadd="10.3.0">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <method type="void" ovadd="10.3.0">
          <sel>addObject:</sel>
          <arg type="id">obj</arg>
          <desc>
            Adds a single object to the content array. The object
            will be inserted into the arranged objects.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>addObjects:</sel>
          <arg type="NSArray*">obj</arg>
          <desc>
            Adds multiple objects to the content array. Each
            object will be inserted into the arranged objects.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>addSelectedObjects:</sel>
          <arg type="NSArray*">obj</arg>
          <desc>
            Adds given objects to the current selection. Returns
            whether the operation was successful.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>addSelectionIndexes:</sel>
          <arg type="NSIndexSet*">idx</arg>
          <desc>
            Adds index positions to the current selection. Returns
            whether the operation was successful.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.4.0">
          <sel>alwaysUsesMultipleValuesMarker</sel>
          <desc>
            Returns whether multiple values marker is always
            used.
          </desc>
        </method>
        <method type="NSArray*" ovadd="10.3.0">
          <sel>arrangeObjects:</sel>
          <arg type="NSArray*">obj</arg>
          <desc>
            Returns a newly arranged version of the given
            objects.
          </desc>
        </method>
        <method type="id" ovadd="10.3.0">
          <sel>arrangedObjects</sel>
          <desc>
            Returns the currently arranged objects.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.5.0">
          <sel>automaticallyRearrangesObjects</sel>
          <desc>
            Returns whether the controller automatically
            rearranges its objects.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>avoidsEmptySelection</sel>
          <desc>
            Returns whether empty selection is avoided.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>canInsert</sel>
          <desc>
            Returns whether inserting objects is currently
            allowed.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>canSelectNext</sel>
          <desc>
            Returns whether a next item is available to select.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>canSelectPrevious</sel>
          <desc>
            Returns whether a previous item is available to
            select.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.4.0">
          <sel>clearsFilterPredicateOnInsertion</sel>
          <desc>
            Returns whether the filter predicate is cleared on
            insertion.
          </desc>
        </method>
        <method type="NSPredicate*" ovadd="10.4.0">
          <sel>filterPredicate</sel>
          <desc>
            Returns the current filter predicate.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>insert:</sel>
          <arg type="id">sender</arg>
          <desc>
            Triggers the insertion operation from a
            <var>sender</var>.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>insertObject:</sel>
          <arg type="id">obj</arg>
          <sel>atArrangedObjectIndex:</sel>
          <arg type="NSUInteger">idx</arg>
          <desc>
            Inserts an object at a specific index in the
            arranged objects.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>insertObjects:</sel>
          <arg type="NSArray*">obj</arg>
          <sel>atArrangedObjectIndexes:</sel>
          <arg type="NSIndexSet*">idx</arg>
          <desc>
            Inserts multiple objects at the specified indexes
            in the arranged objects.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>preservesSelection</sel>
          <desc>
            Returns whether the selection is preserved across
            rearrangements.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>rearrangeObjects</sel>
          <desc>
            Rearranges the content based on current sort
            descriptors and filters.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>removeObject:</sel>
          <arg type="id">obj</arg>
          <desc>
            Removes a single object from the content array.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>removeObjectAtArrangedObjectIndex:</sel>
          <arg type="NSUInteger">idx</arg>
          <desc>
            Removes the object at the specified index from the
            arranged objects.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>removeObjects:</sel>
          <arg type="NSArray*">obj</arg>
          <desc>
            Removes multiple objects from the content array.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>removeObjectsAtArrangedObjectIndexes:</sel>
          <arg type="NSIndexSet*">idx</arg>
          <desc>
            Removes multiple objects at the specified indexes
            from the arranged objects.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>removeSelectedObjects:</sel>
          <arg type="NSArray*">obj</arg>
          <desc>
            Removes the specified objects from the current
            selection. Returns whether the operation was
            successful.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>removeSelectionIndexes:</sel>
          <arg type="NSIndexSet*">idx</arg>
          <desc>
            Removes the specified index positions from the
            current selection. Returns whether the operation
            was successful.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>selectNext:</sel>
          <arg type="id">sender</arg>
          <desc>
            Moves the selection to the next object.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>selectPrevious:</sel>
          <arg type="id">sender</arg>
          <desc>
            Moves the selection to the previous object.
          </desc>
        </method>
        <method type="NSArray*" ovadd="10.3.0">
          <sel>selectedObjects</sel>
          <desc>
            Returns an array of currently selected objects.
          </desc>
        </method>
        <method type="NSUInteger" ovadd="10.3.0">
          <sel>selectionIndex</sel>
          <desc>
            Returns the index of the current selection.
          </desc>
        </method>
        <method type="NSIndexSet*" ovadd="10.3.0">
          <sel>selectionIndexes</sel>
          <desc>
            Returns the current selection as an index set.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>selectsInsertedObjects</sel>
          <desc>
            Returns whether newly inserted objects are
            selected.
          </desc>
        </method>
        <method type="void" ovadd="10.4.0">
          <sel>setAlwaysUsesMultipleValuesMarker:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Sets whether the controller should always use the
            multiple values marker.
          </desc>
        </method>
        <method type="void" ovadd="10.5.0">
          <sel>setAutomaticallyRearrangesObjects:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Sets whether the controller should automatically
            rearrange its objects.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setAvoidsEmptySelection:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Sets whether the controller avoids empty selection.
          </desc>
        </method>
        <method type="void" ovadd="10.4.0">
          <sel>setClearsFilterPredicateOnInsertion:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Sets whether the filter predicate should be cleared
            when inserting objects.
          </desc>
        </method>
        <method type="void" ovadd="10.4.0">
          <sel>setFilterPredicate:</sel>
          <arg type="NSPredicate*">filterPredicate</arg>
          <desc>
            Sets the filter predicate used to filter content.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setPreservesSelection:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Sets whether to preserve the selection across
            rearrangements.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>setSelectedObjects:</sel>
          <arg type="NSArray*">obj</arg>
          <desc>
            Replaces the current selection with the given
            objects. Returns whether the operation was
            successful.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>setSelectionIndex:</sel>
          <arg type="NSUInteger">idx</arg>
          <desc>
            Sets the selection to a specific index. Returns
            whether the operation was successful.
          </desc>
        </method>
        <method type="BOOL" ovadd="10.3.0">
          <sel>setSelectionIndexes:</sel>
          <arg type="NSIndexSet*">idx</arg>
          <desc>
            Sets the selection to the specified indexes. Returns
            whether the operation was successful.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setSelectsInsertedObjects:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Sets whether newly inserted objects should be
            selected.
          </desc>
        </method>
        <method type="void" ovadd="10.3.0">
          <sel>setSortDescriptors:</sel>
          <arg type="NSArray*">desc</arg>
          <desc>
            Sets the sort descriptors used for rearranging
            objects.
          </desc>
        </method>
        <method type="NSArray*" ovadd="10.3.0">
          <sel>sortDescriptors</sel>
          <desc>
            Returns the current sort descriptors.
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
